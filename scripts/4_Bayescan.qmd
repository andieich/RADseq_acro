---
title: "Untitled"
format: html
editor: visual
---

```{r}
library(here)
library(tidyverse)
library(radiator)
library(boa)
```

Convert `.vcf` to Bayescan

```{r}
# radiator::genomic_converter(
#   data = here("data/vcf/acro_filt.recode.vcf"),
#   strata = here("data/meta/strata_acro.txt"),
#   output = "bayescan",
#   filename = "acro"
# )
```

Move into Bayescan folder

```{bash}
mv 01_radiator_genomic_converter_20241115@1456 ../data/bayescan
```

Upload `acro_bayescan.txt` to [Galaxy](https://usegalaxy.eu/) (not possible to install on M1 Mac). Analysis took about 4 days. Download data to `data/bayescan/results`

HINT: In Galaxy, an old version of Bayescan is used, that does not calculate Q values.\
Try in Colab

![](images/clipboard-2041035642.png){width="454"}

![](images/clipboard-1544142153.png)

```{r}
mydata <- read.table(here("data/bayescan/results/Galaxy4-[BayeScan_on_data_1_(bayescan)].sel"),colClasses="numeric")
```

```{r}
parameter="Fst1"
plot(density(mydata[[parameter]]), xlab=parameter, main=paste(parameter,"posterior distribution"))
```

```{r}
boa.hpd(mydata[[parameter]],0.05)
```

```{r}
dat_bayes <- read.table(here("data/bayescan/results/Galaxy7-[BayeScan_on_data_1_(bayescan_fst)].txt")) %>% 
  janitor::clean_names() %>% 
  mutate(snp = 1:n(),
         sel = ifelse(alpha > 0, "diversifying", "balancing"),
         outlier = ifelse(log10_po > 2, "yes", "no"),
         q_value = ) %>% 
  
```

```{r}
bayescan$SELECTION <- ifelse(bayescan$ALPHA>=0&bayescan$Q_VALUE<=0.05,
                             "diversifying",
                             ifelse(bayescan$ALPHA>=0&bayescan$Q_VALUE>0.05,
                                    "neutral",
                                    "balancing")) 
bayescan$SELECTION<- factor(bayescan$SELECTION)
levels(bayescan$SELECTION) 
```

```{r}
dat_bayes %>%
  mutate(sel = ifelse(alpha > 0, "diversifying", "balancing"),
         outlier = ifelse(log10_po > 2, "yes", "no")) %>% 
  ggplot(aes(x=log10_po,y=fst, label= pos, col = sel)) +
  geom_point( size=2, aes(shape = outlier))+
  geom_vline(xintercept = 2, linetype = "11")+
  theme_bw()


 
```

```{r}
outliers=as.integer(row.names(res[dat_bayes[,colq]<=FDR,]))



```

```{r}
library(coda)
```

```{r}
chain <- read.table(here("data/bayescan/results/Galaxy4-[BayeScan_on_data_1_(bayescan)].sel"),header=TRUE)
```

```{r}
chain <- mcmc(chain,thin=10)

plot(chain)
```

```{r}
summary(chain)
```

```{r}
autocorr.diag(chain)
```

```{r}
effectiveSize(chain)
```
